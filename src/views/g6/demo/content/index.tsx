import React, { useEffect, useRef } from "react";
import G6 from "@antv/g6";
import { GraphData, NodeConfig } from "@antv/g6/lib/types";
// import G6React from "./"
import componentList from "./../components/index";

// plugins// 实例化 minimap 插件
const minimap = new G6.Minimap({
  size: [100, 100],
  className: "minimap",
  type: "delegate",
});
// 实例化 grid 插件
const grid = new G6.Grid();

const data: GraphData = {
  nodes: [
    {
      index: 5,
      id: "node1",
      x: 100,
      y: 200,
      color: "red",
      type: "service",
      showAnchor: true,
      showDocker: true,
      tipIcon: {
        text: "v5.7",
      },
      imgStyle: {
        fill: "#FFFFFF",
      },
      label: "node1",
      img:
        "M10.7783703,12.8919901 C4.26131474,12.9681774 3.19320493,16.4358805 7.20844966,23.2065512 C11.0245827,19.0126116 15.5269389,16.1450952 20.7155181,14.6040019 C21.1269655,19.0891862 23.6557359,22.8453999 28.3018294,25.8726429 L29.6485511,24.8163711 L34.2699199,30.8496712 C35.9749397,30.4219726 37.2182997,31.1387489 38,33 L34.2699199,33 C24.2084029,27.8586327 17.3851304,25.4123917 13.8001023,25.6612771 C10.3582083,25.4950705 7.68770202,26.4861555 5.7885834,28.634532 C4.96253016,29.7812552 4.65328319,31.017915 4.86084249,32.3445113 L1,32.3445113 C2.65381696,29.1207613 4.51893986,26.3054515 6.59536871,23.8985819 C2.25955328,16.7051265 3.3310049,12.4063704 10.0000173,12.0273695 C10.0000058,12.0250795 10,12.0227844 10,12.0204841 C10,11.3617356 10.2294804,11 11.7098019,11 C12.6966829,11 14.4600822,11.5508774 17,12.6526323 C13.9162187,12.9271882 12.057346,13.0389894 11.4233817,12.9880361 C11.1760416,12.9681567 10.9610734,12.9377276 10.7783703,12.8919901 Z M24.4207149,9.69273028 C26.5626759,8.69125358 28.8780392,8.69125358 31.366805,9.69273028 C31.7011268,7.91145881 32.8145962,6.68054872 34.707213,6 C35.8359852,15.5091431 33.7009684,21.8424764 28.3021625,25 C22.4892486,21.7379449 20.1468787,15.4046115 21.2750527,6 C22.5830411,6.27368804 23.3858864,6.8061778 23.6835887,7.5974693 C23.9812911,8.38876079 24.2269998,9.08718112 24.4207149,9.69273028 Z M32.8410632,9.96942969 L32.5036652,11.767091 L30.8068423,11.0842912 C28.6909486,10.2328578 26.8070381,10.2328578 25.05603,11.051544 L23.5115271,11.7736784 L22.9920371,10.1497641 C22.864831,9.75212065 22.7131178,9.30955289 22.5369781,8.82255106 C22.1930629,15.7801244 24.1259293,20.5198264 28.2823232,23.2351726 C32.1253158,20.5700727 33.8720076,15.7501476 33.4368307,8.59237113 C33.1355879,8.97796515 32.9416224,9.43364888 32.8410632,9.96942969 Z M28.3826354,27.7156049 L27.4829626,27.1294075 C23.1049779,24.2768554 20.4182816,20.7465118 19.5057821,16.5832491 C14.7320875,18.3278831 10.6015306,21.3338241 7.10575653,25.6236977 C8.96632362,24.5345877 11.206952,24.0473855 13.7868662,24.1591031 C17.3361705,23.9529906 23.273998,25.9338743 31.7967053,30.0875881 L29.3803916,26.9330367 L28.3826354,27.7156049 Z M14.305975,31 L9,27.58396 C10.1249406,27.0533801 11.6961364,26.8843596 13.7135872,27.0768988 C13.4750812,27.7950875 13.8789847,28.6633876 14.9252977,29.6817992 C15.0640611,29.5229389 15.5624962,29.4532219 16.4206032,29.4726482 C17.5695915,29.579652 18.0916755,30.0887693 17.9868553,31 L14.305975,31 Z",
      parent: "group1",
    },
    {
      index: 5,
      id: "node2",
      x: 500,
      y: 400,
      uuid: "fsafaf-asfaf",
      showAnchor: true,
      label: "node2",
      img:
        "M7.28876831,8.7455819 L6.16310594,8.91133571 C6.06534862,8.95150394 6,9.04500738 6,9.1484375 L6,17.339375 C6,23.7927216 9.88417705,29.272574 19.1861248,35.7245973 C19.4416512,35.9036843 19.7401848,36 20.0568328,36 C20.3669694,36 20.6619692,35.9068799 20.9083182,35.7388343 C24.639542,33.1511801 27.471864,30.736779 29.5397389,28.3765119 L31.0440578,29.6944743 C28.8566789,32.1911428 25.9039087,34.7082195 22.041799,37.3866096 C21.4605653,37.7831777 20.7736834,38 20.0568328,38 C19.3248644,38 18.6265355,37.7746986 18.0422543,37.3651876 C8.25952071,30.5796965 4,24.5703039 4,17.339375 L4,9.1484375 C4,8.11739883 4.69977091,7.22751211 5.68504104,6.96657614 L5.7953729,6.94391811 L6.99737389,6.76692345 C9.77347653,6.35803865 12.3653085,5.36999774 14.701692,4.00919064 C16.1297873,3.17740845 17.1926061,2.37226191 17.7637343,1.84796811 C18.3985868,1.30501468 19.2043318,1 20.0568328,1 C20.8563323,1 21.6183003,1.26707913 22.2888936,1.79445442 L22.4059976,1.90010113 C22.4466407,1.93643501 22.5331344,2.01015971 22.6600128,2.11303494 C22.873914,2.28646969 23.1264196,2.48029018 23.415851,2.68944975 C24.2442996,3.28813372 25.2001027,3.88772383 26.269038,4.44776527 C28.4059173,5.56732876 30.7171567,6.38472499 33.1571228,6.77292094 L32.8428772,8.7480791 C30.1739893,8.32346193 27.6597892,7.43428632 25.3408641,6.21934458 C24.1834708,5.61295781 23.147261,4.96292737 22.244407,4.3104738 C21.6915961,3.91098127 21.3076692,3.59968678 21.0719662,3.39017062 L21.0032777,3.32489489 C20.7353118,3.11541199 20.4060452,3 20.0568328,3 C19.6868798,3 19.3405262,3.13111211 19.0905646,3.34403881 C18.4456959,3.93701847 17.2692325,4.82825733 15.708284,5.73741876 C13.165058,7.21869957 10.3377569,8.29650446 7.28876831,8.7455819 Z M16,15 L16,13 L26,13 L26,15 L16,15 Z M16,20 L16,18 L35,18 L35,20 L16,20 Z M29,15 L29,13 L35,13 L35,15 L29,15 Z M16,25 L16,23 L21,23 L21,25 L16,25 Z M24,25 L24,23 L35,23 L35,25 L24,25 Z",
      parent: "group1",
    },
    {
      index: 5,
      id: "node3",
      x: 300,
      y: 500,
      showAnchor: true,
      visiable: false,
      label: "node3",
      img:
        "M7.28876831,8.7455819 L6.16310594,8.91133571 C6.06534862,8.95150394 6,9.04500738 6,9.1484375 L6,17.339375 C6,23.7927216 9.88417705,29.272574 19.1861248,35.7245973 C19.4416512,35.9036843 19.7401848,36 20.0568328,36 C20.3669694,36 20.6619692,35.9068799 20.9083182,35.7388343 C24.639542,33.1511801 27.471864,30.736779 29.5397389,28.3765119 L31.0440578,29.6944743 C28.8566789,32.1911428 25.9039087,34.7082195 22.041799,37.3866096 C21.4605653,37.7831777 20.7736834,38 20.0568328,38 C19.3248644,38 18.6265355,37.7746986 18.0422543,37.3651876 C8.25952071,30.5796965 4,24.5703039 4,17.339375 L4,9.1484375 C4,8.11739883 4.69977091,7.22751211 5.68504104,6.96657614 L5.7953729,6.94391811 L6.99737389,6.76692345 C9.77347653,6.35803865 12.3653085,5.36999774 14.701692,4.00919064 C16.1297873,3.17740845 17.1926061,2.37226191 17.7637343,1.84796811 C18.3985868,1.30501468 19.2043318,1 20.0568328,1 C20.8563323,1 21.6183003,1.26707913 22.2888936,1.79445442 L22.4059976,1.90010113 C22.4466407,1.93643501 22.5331344,2.01015971 22.6600128,2.11303494 C22.873914,2.28646969 23.1264196,2.48029018 23.415851,2.68944975 C24.2442996,3.28813372 25.2001027,3.88772383 26.269038,4.44776527 C28.4059173,5.56732876 30.7171567,6.38472499 33.1571228,6.77292094 L32.8428772,8.7480791 C30.1739893,8.32346193 27.6597892,7.43428632 25.3408641,6.21934458 C24.1834708,5.61295781 23.147261,4.96292737 22.244407,4.3104738 C21.6915961,3.91098127 21.3076692,3.59968678 21.0719662,3.39017062 L21.0032777,3.32489489 C20.7353118,3.11541199 20.4060452,3 20.0568328,3 C19.6868798,3 19.3405262,3.13111211 19.0905646,3.34403881 C18.4456959,3.93701847 17.2692325,4.82825733 15.708284,5.73741876 C13.165058,7.21869957 10.3377569,8.29650446 7.28876831,8.7455819 Z M16,15 L16,13 L26,13 L26,15 L16,15 Z M16,20 L16,18 L35,18 L35,20 L16,20 Z M29,15 L29,13 L35,13 L35,15 L29,15 Z M16,25 L16,23 L21,23 L21,25 L16,25 Z M24,25 L24,23 L35,23 L35,25 L24,25 Z",
    },
    {
      index: 5,
      id: "node4",
      x: 300,
      y: 200,
      showAnchor: true,
      parent: "group1",
      label: "node4",
      img:
        "M19.4000078,23.9894693 L19.6038436,24.1059674 L17.1521701,24.5383661 C15.8477402,24.7684269 14.7679542,24.8747528 13.7657253,24.8445548 C13.677319,24.8456775 13.5889638,24.846215 13.5006706,24.8461653 C10.3149201,25.0341025 7.18498048,24.3184693 4.46786192,22.7957353 L4.46634812,25.4119486 C4.4737823,25.5123464 4.50225032,25.6147264 4.55050591,25.7182678 C7.14035979,27.4010269 10.2359928,28.2096559 13.447669,28.0222727 C16.0310416,28.0222727 18.6241846,27.4932442 20.9366099,26.5027157 C21.3467557,26.3162858 21.7541724,26.0770333 22.1962022,25.7690022 C22.1893601,25.7422141 22.1809912,25.7122442 22.1697824,25.6736465 C21.9614158,24.7359967 21.7298248,23.9613525 21.4397721,23.2696788 C20.7759551,23.544539 20.0940693,23.7848319 19.4000078,23.9894693 Z M2.71070075,19.4560321 C3.10978313,17.3731564 6.31689549,15.6623511 10.4767144,15.1078898 L11.1954113,15.0120949 L11.4419826,15.693934 C12.5027886,18.6273625 14.5279669,21.1036797 17.1349683,22.6893342 C18.4650959,22.429401 19.7712927,22.029512 21.0244279,21.4943667 C21.0290692,21.4928196 21.0477211,21.4830235 21.123057,21.4376742 C21.3085166,21.3260348 21.4115692,21.2719105 21.5807916,21.2155031 L22.3016682,20.9752112 L22.6594134,21.6456004 C23.133076,22.5332105 23.4813243,23.482958 23.7574815,24.5777372 L24.2960781,24.158242 L24.2960781,26 L24.2951506,27.3628943 C24.2235676,28.9384212 23.8759321,30.5490609 23.2683437,32.2214178 L23.1923668,32.4305403 L23.0276995,32.5801712 C21.200508,34.2405145 17.5314817,35.3184091 13.447669,35.3184091 C7.79843328,35.3184091 2.86948464,33.1954125 2.66880537,30.4529545 L2.66880537,24.4009484 L2.66880537,19.426403 L2.71070075,19.4560321 Z M14.4931587,23.0189517 C12.5488107,21.4291673 11.0025281,19.359777 10.0187127,16.9988866 C6.74428389,17.5684718 4.46880537,18.9287994 4.46880537,19.8952273 C4.46880537,21.2216467 8.59422537,23.0302273 13.5004884,23.0317786 C13.5977737,23.0374979 13.6955912,23.041756 13.7941582,23.0445613 C14.0272018,23.0403048 14.260252,23.0317601 14.4931587,23.0189517 Z M4.46768082,28.0818518 L4.46634635,30.38647 C4.5684644,31.7650637 8.63919603,33.5184091 13.447669,33.5184091 C16.9908412,33.5184091 20.1346157,32.632139 21.6544551,31.3882168 C22.0550124,30.2427298 22.3163363,29.1416772 22.4346085,28.0919277 C20.4371239,29.447369 17.0828378,30.3438636 13.447669,30.3438636 C9.78931867,30.3438636 6.43340864,29.4539154 4.46768082,28.0818518 Z M26.3094501,6.74056524 C26.3090301,6.74052625 26.3571091,6.7445008 26.3767349,6.74879017 C27.5610681,6.53786298 29.4493323,6.84771042 31.3555654,7.46449406 C33.8239102,8.26315539 35.1865744,9.01500433 34.7569996,10.2318675 L34.6617172,10.5017753 L34.4280285,10.6670585 C34.0854971,10.9093238 33.6589385,11.0651338 32.7705643,11.329049 L32.293862,11.4697547 C31.7210516,11.6395863 31.3611785,11.758941 31.0980041,11.8735743 C34.5754935,18.2127616 34.1988093,25.5692894 29.677372,33.2781737 C28.7794087,34.652644 27.9848405,35.6564333 27.0555619,36.4473983 C27.1214126,36.3996185 26.3096941,37.0151826 26.0950454,37.1390094 C25.8791724,37.2635424 25.6599744,37.3502191 25.4057799,37.4095128 L23.3361961,37.8922662 L24.4295954,36.0699858 C26.6511556,32.367491 27.2325516,27.8958376 25.8671203,23.8897315 C24.8343943,20.6005405 22.609343,17.875863 19.635336,16.0724745 C19.6354571,16.0842315 19.6355831,16.0961048 19.6357139,16.1080957 C19.6389203,16.3809314 19.640512,16.5247856 19.6414413,16.6654254 C19.654323,18.6149241 19.5859159,19.1958675 18.7201624,19.6051939 C17.296479,20.130563 15.6481416,18.2838496 14.3791237,15.4793246 C14.1348865,14.73824 13.998306,14.1689807 13.9516784,13.7003017 C13.135728,13.4612403 12.3472077,13.2569427 11.6215972,13.0914719 C10.9794002,12.945023 10.4231462,12.8393706 10.1793466,12.8103316 C9.39958958,12.6701062 8.67907317,12.4842266 8.04414322,12.1982362 C6.83639861,11.6542341 6.15453513,10.7744849 6.71736345,9.5949655 C7.26987302,8.52276745 8.24883006,7.85262207 9.71736597,7.28603347 C9.9431075,7.19893817 10.17453,7.11607597 10.462151,7.01775304 C10.5107476,7.00114036 10.6701264,6.94730298 10.8250455,6.89487213 C11.9125416,5.19899487 14.2409333,3.84943708 16.3129504,3.58506561 C19.0594413,3.34477879 23.1750064,4.41138712 26.2757646,6.73759065 L26.3094501,6.74056524 Z M26.6382697,8.53158242 L26.4457739,7.65240932 L26.524214,8.54898455 C26.4392394,8.55641887 26.3807548,8.55391212 26.2851319,8.54600414 C26.2104467,8.53931536 26.2104467,8.53931536 26.1430314,8.53285562 L26.0933178,8.52845609 C26.0468804,8.52461574 26.0168798,8.52355944 26.0331871,8.52213274 L25.679056,8.55311519 L25.3993373,8.33373837 C22.6498899,6.17741123 18.8486254,5.1700985 16.5055884,5.37436636 C14.8837749,5.58182951 12.9136085,6.77280269 12.224393,8.06357934 L12.0579637,8.37527153 L11.7239316,8.49048132 C11.5939936,8.53529775 11.1278317,8.69246016 11.0443979,8.7209819 C10.7769694,8.81240204 10.5659412,8.88796193 10.3652883,8.96537758 C9.32083306,9.36834794 8.67952405,9.79315083 8.37158275,10.3186484 C8.45362629,10.3869303 8.59404107,10.4717552 8.78338395,10.5570406 C9.24999008,10.7672131 9.8528926,10.9227506 10.4375563,11.029993 C11.154449,11.1092645 13.1253056,11.5587056 15.0274419,12.1440001 L15.2016435,12.1976026 L15.702182,12.617604 L15.7407937,13.0589378 L15.7387287,13.236632 C15.7076583,13.516649 15.7905522,14.0113226 16.0532268,14.8251902 C16.5235036,15.8597802 17.0807467,16.7542392 17.6030572,17.3394093 C17.6811059,17.4268512 17.7565133,17.5051574 17.8281371,17.5738341 C17.8402124,17.3369186 17.8439196,17.0464345 17.8414806,16.6773189 C17.8405822,16.5413593 17.8390429,16.4022314 17.8358209,16.127722 C17.8280233,15.4126216 17.8344414,15.0689193 17.8773057,14.7633492 L17.9131735,14.507656 L18.079139,14.3098658 C18.1460042,14.2301789 18.2336944,14.151582 18.3463894,14.0823462 C18.5035942,13.9857652 18.687859,13.9221873 18.8919203,13.9043342 L19.3614952,13.8632517 L19.5944406,13.9847618 C23.4168098,15.9786038 26.3053766,19.2766948 27.5776503,23.3297244 C28.6357899,26.4336131 28.6541362,29.7838008 27.7485539,32.923435 C27.8793544,32.7350535 28.012191,32.5375351 28.1475428,32.3306887 C32.421591,25.0416655 32.6932157,18.2323129 29.3238885,12.3909853 L29.2911635,12.3342507 C29.2684688,12.2992788 29.2478936,12.263524 29.2295957,12.227512 L29.2242921,12.2183171 L29.2241455,12.2166418 C29.1691774,12.1055289 29.1359849,11.9924759 29.1291896,11.8928663 C28.9240207,10.7063153 29.5494526,10.4059918 31.7821981,9.74400843 L32.083815,9.6549827 C31.7088615,9.49279163 31.2706786,9.32890592 30.8014392,9.1770781 C29.1097274,8.6297053 27.4155587,8.36139419 26.6382697,8.53158242 Z",
    },
    {
      dot: {
        r: 5,
        fill: "red",
      },
      index: 5,
      id: "node5",
      x: 300,
      y: 800,
      showAnchor: true,
      label: "node5",
      img:
        "M19.4000078,23.9894693 L19.6038436,24.1059674 L17.1521701,24.5383661 C15.8477402,24.7684269 14.7679542,24.8747528 13.7657253,24.8445548 C13.677319,24.8456775 13.5889638,24.846215 13.5006706,24.8461653 C10.3149201,25.0341025 7.18498048,24.3184693 4.46786192,22.7957353 L4.46634812,25.4119486 C4.4737823,25.5123464 4.50225032,25.6147264 4.55050591,25.7182678 C7.14035979,27.4010269 10.2359928,28.2096559 13.447669,28.0222727 C16.0310416,28.0222727 18.6241846,27.4932442 20.9366099,26.5027157 C21.3467557,26.3162858 21.7541724,26.0770333 22.1962022,25.7690022 C22.1893601,25.7422141 22.1809912,25.7122442 22.1697824,25.6736465 C21.9614158,24.7359967 21.7298248,23.9613525 21.4397721,23.2696788 C20.7759551,23.544539 20.0940693,23.7848319 19.4000078,23.9894693 Z M2.71070075,19.4560321 C3.10978313,17.3731564 6.31689549,15.6623511 10.4767144,15.1078898 L11.1954113,15.0120949 L11.4419826,15.693934 C12.5027886,18.6273625 14.5279669,21.1036797 17.1349683,22.6893342 C18.4650959,22.429401 19.7712927,22.029512 21.0244279,21.4943667 C21.0290692,21.4928196 21.0477211,21.4830235 21.123057,21.4376742 C21.3085166,21.3260348 21.4115692,21.2719105 21.5807916,21.2155031 L22.3016682,20.9752112 L22.6594134,21.6456004 C23.133076,22.5332105 23.4813243,23.482958 23.7574815,24.5777372 L24.2960781,24.158242 L24.2960781,26 L24.2951506,27.3628943 C24.2235676,28.9384212 23.8759321,30.5490609 23.2683437,32.2214178 L23.1923668,32.4305403 L23.0276995,32.5801712 C21.200508,34.2405145 17.5314817,35.3184091 13.447669,35.3184091 C7.79843328,35.3184091 2.86948464,33.1954125 2.66880537,30.4529545 L2.66880537,24.4009484 L2.66880537,19.426403 L2.71070075,19.4560321 Z M14.4931587,23.0189517 C12.5488107,21.4291673 11.0025281,19.359777 10.0187127,16.9988866 C6.74428389,17.5684718 4.46880537,18.9287994 4.46880537,19.8952273 C4.46880537,21.2216467 8.59422537,23.0302273 13.5004884,23.0317786 C13.5977737,23.0374979 13.6955912,23.041756 13.7941582,23.0445613 C14.0272018,23.0403048 14.260252,23.0317601 14.4931587,23.0189517 Z M4.46768082,28.0818518 L4.46634635,30.38647 C4.5684644,31.7650637 8.63919603,33.5184091 13.447669,33.5184091 C16.9908412,33.5184091 20.1346157,32.632139 21.6544551,31.3882168 C22.0550124,30.2427298 22.3163363,29.1416772 22.4346085,28.0919277 C20.4371239,29.447369 17.0828378,30.3438636 13.447669,30.3438636 C9.78931867,30.3438636 6.43340864,29.4539154 4.46768082,28.0818518 Z M26.3094501,6.74056524 C26.3090301,6.74052625 26.3571091,6.7445008 26.3767349,6.74879017 C27.5610681,6.53786298 29.4493323,6.84771042 31.3555654,7.46449406 C33.8239102,8.26315539 35.1865744,9.01500433 34.7569996,10.2318675 L34.6617172,10.5017753 L34.4280285,10.6670585 C34.0854971,10.9093238 33.6589385,11.0651338 32.7705643,11.329049 L32.293862,11.4697547 C31.7210516,11.6395863 31.3611785,11.758941 31.0980041,11.8735743 C34.5754935,18.2127616 34.1988093,25.5692894 29.677372,33.2781737 C28.7794087,34.652644 27.9848405,35.6564333 27.0555619,36.4473983 C27.1214126,36.3996185 26.3096941,37.0151826 26.0950454,37.1390094 C25.8791724,37.2635424 25.6599744,37.3502191 25.4057799,37.4095128 L23.3361961,37.8922662 L24.4295954,36.0699858 C26.6511556,32.367491 27.2325516,27.8958376 25.8671203,23.8897315 C24.8343943,20.6005405 22.609343,17.875863 19.635336,16.0724745 C19.6354571,16.0842315 19.6355831,16.0961048 19.6357139,16.1080957 C19.6389203,16.3809314 19.640512,16.5247856 19.6414413,16.6654254 C19.654323,18.6149241 19.5859159,19.1958675 18.7201624,19.6051939 C17.296479,20.130563 15.6481416,18.2838496 14.3791237,15.4793246 C14.1348865,14.73824 13.998306,14.1689807 13.9516784,13.7003017 C13.135728,13.4612403 12.3472077,13.2569427 11.6215972,13.0914719 C10.9794002,12.945023 10.4231462,12.8393706 10.1793466,12.8103316 C9.39958958,12.6701062 8.67907317,12.4842266 8.04414322,12.1982362 C6.83639861,11.6542341 6.15453513,10.7744849 6.71736345,9.5949655 C7.26987302,8.52276745 8.24883006,7.85262207 9.71736597,7.28603347 C9.9431075,7.19893817 10.17453,7.11607597 10.462151,7.01775304 C10.5107476,7.00114036 10.6701264,6.94730298 10.8250455,6.89487213 C11.9125416,5.19899487 14.2409333,3.84943708 16.3129504,3.58506561 C19.0594413,3.34477879 23.1750064,4.41138712 26.2757646,6.73759065 L26.3094501,6.74056524 Z M26.6382697,8.53158242 L26.4457739,7.65240932 L26.524214,8.54898455 C26.4392394,8.55641887 26.3807548,8.55391212 26.2851319,8.54600414 C26.2104467,8.53931536 26.2104467,8.53931536 26.1430314,8.53285562 L26.0933178,8.52845609 C26.0468804,8.52461574 26.0168798,8.52355944 26.0331871,8.52213274 L25.679056,8.55311519 L25.3993373,8.33373837 C22.6498899,6.17741123 18.8486254,5.1700985 16.5055884,5.37436636 C14.8837749,5.58182951 12.9136085,6.77280269 12.224393,8.06357934 L12.0579637,8.37527153 L11.7239316,8.49048132 C11.5939936,8.53529775 11.1278317,8.69246016 11.0443979,8.7209819 C10.7769694,8.81240204 10.5659412,8.88796193 10.3652883,8.96537758 C9.32083306,9.36834794 8.67952405,9.79315083 8.37158275,10.3186484 C8.45362629,10.3869303 8.59404107,10.4717552 8.78338395,10.5570406 C9.24999008,10.7672131 9.8528926,10.9227506 10.4375563,11.029993 C11.154449,11.1092645 13.1253056,11.5587056 15.0274419,12.1440001 L15.2016435,12.1976026 L15.702182,12.617604 L15.7407937,13.0589378 L15.7387287,13.236632 C15.7076583,13.516649 15.7905522,14.0113226 16.0532268,14.8251902 C16.5235036,15.8597802 17.0807467,16.7542392 17.6030572,17.3394093 C17.6811059,17.4268512 17.7565133,17.5051574 17.8281371,17.5738341 C17.8402124,17.3369186 17.8439196,17.0464345 17.8414806,16.6773189 C17.8405822,16.5413593 17.8390429,16.4022314 17.8358209,16.127722 C17.8280233,15.4126216 17.8344414,15.0689193 17.8773057,14.7633492 L17.9131735,14.507656 L18.079139,14.3098658 C18.1460042,14.2301789 18.2336944,14.151582 18.3463894,14.0823462 C18.5035942,13.9857652 18.687859,13.9221873 18.8919203,13.9043342 L19.3614952,13.8632517 L19.5944406,13.9847618 C23.4168098,15.9786038 26.3053766,19.2766948 27.5776503,23.3297244 C28.6357899,26.4336131 28.6541362,29.7838008 27.7485539,32.923435 C27.8793544,32.7350535 28.012191,32.5375351 28.1475428,32.3306887 C32.421591,25.0416655 32.6932157,18.2323129 29.3238885,12.3909853 L29.2911635,12.3342507 C29.2684688,12.2992788 29.2478936,12.263524 29.2295957,12.227512 L29.2242921,12.2183171 L29.2241455,12.2166418 C29.1691774,12.1055289 29.1359849,11.9924759 29.1291896,11.8928663 C28.9240207,10.7063153 29.5494526,10.4059918 31.7821981,9.74400843 L32.083815,9.6549827 C31.7088615,9.49279163 31.2706786,9.32890592 30.8014392,9.1770781 C29.1097274,8.6297053 27.4155587,8.36139419 26.6382697,8.53158242 Z",
      parent: "group2",
    },
    {
      id: "node6",
      label: "node6",
      dot: {
        r: 5,
        fill: "red",
      },
      align: "left",
      x: 450,
      y: 300,
      parent: "group3",
    },
  ],
  edges: [
    {
      source: "node1",
      target: "node2",
      endArrow: true,
    },
  ],
  // groups: [
  //   {
  //     id: "group1",
  //     shape: "region",
  //     headStyle: {
  //       fill: "white",
  //       lineWidth: 2,
  //       strokeStyle: "rgb(27, 133, 255, 1)",
  //     },
  //     style: {
  //       fill: "rgb(27, 133, 255, 0.1)",
  //       radius: 4,
  //       strokeStyle: "rgb(27, 133, 255, 1)",
  //       lineWidth: 2,
  //     },
  //     label: {
  //       text: "Du345263",
  //       fill: "blue",
  //       fontSize: 12,
  //       fontWeight: 800,
  //     },
  //     collapsed: false,
  //     duStyle: {
  //       fill: "#1B85FF",
  //     },
  //     showDuAction: true,
  //   },
  //   {
  //     id: "group2",
  //     align: "left",
  //     shape: "region",
  //     label: {
  //       text: "Du345263",
  //       fill: "blue",
  //     },
  //     collapsed: false,
  //     headStyle: {
  //       fill: "#FFFFFF",
  //     },
  //     duStyle: {
  //       fill: "#1B85FF",
  //     },
  //     showDuAction: true,
  //   },
  //   {
  //     id: "group3",
  //     shape: "app",
  //     parent: "group1",
  //     offset: 50,
  //     style: {
  //       fill: "pink",
  //     },
  //   },
  // ],
};

interface Props {}
const GRAPH_CONTAINER = "container";
const App: React.FC<Props> = () => {
  const containerRef = useRef<any>(null);

  /**
   * 注册组建
   * @param type{String} 必须为字符串，为G6原生支持的几种类型
   * @param item {Object} 组件对象，参照内置提供的写
   * @param extendShapeType {String} 继承的类型名称
   */
  const addComponent = (
    type: "node" | "edge" | "combo",
    item: any,
    extendShapeType?: string | undefined
  ): void => {
    switch (type) {
      case "node":
        console.log(item.name, item.options, extendShapeType);
        G6.registerNode(item.name, item.options, extendShapeType);
        break;
      case "edge":
        G6.registerEdge(item.name, item.options, extendShapeType);
        break;
      case "combo":
        G6.registerCombo(item.name, item.options, extendShapeType);
        break;
      default:
        throw new Error(`type[${type}] is illegal!`);
    }
  };
  // 注册组建
  useEffect(() => {
    componentList.forEach((item: any) => {
      addComponent(item.type, item, item.extendShapeType);
    });
  }, []);

  useEffect(() => {
    const width =
      (containerRef.current && containerRef.current.scrollWidth) || 500;
    const height =
      (containerRef.current && containerRef.current.scrollHeight) || 500;
    const graph = new G6.Graph({
      container: GRAPH_CONTAINER,
      plugins: [minimap, grid], // 将 minimap 实例配置到图上
      width,
      height,
      animate: true,
      // fitView: true,
      // fitViewPadding: [20, 40, 50, 20],
      modes: {
        default: [
          "drag-canvas",
          "zoom-canvas",
          {
            type: "drag-node",
            delegate: false,
          },
          // ...
          {
            type: "tooltip", // 提示框
            formatText(model): string {
              // 提示框文本内容
              const text =
                "label: " + model.label + "<br/> class: " + model.class;
              return text;
            },
          },
          {
            type: "edge-tooltip", // 边提示框
            formatText(model) {
              // 边提示框文本内容
              const text =
                "source: " +
                model.source +
                "<br/> target: " +
                model.target +
                "<br/> weight: " +
                model.weight;
              return text;
            },
          },
        ],
        edit: [],
      },

      minZoom: 0.2,
      maxZoom: 10,
    });

    // eslint-disable-next-line @typescript-eslint/explicit-function-return-type
    const main = async () => {
      const nodes = data.nodes;
      const edges = data.edges;
      nodes &&
        nodes.forEach((node: any) => {
          node.type = "service";
          node.color = "red";
        });
      // 遍历边数据
      edges &&
        edges.forEach((edge: any) => {
          if (!edge.style) {
            edge.style = {};
          }
          edge.style.lineWidth = edge.weight; // 边的粗细映射边数据中的 weight 属性数值
          // 移到此处
          edge.style.opacity = 0.6;
          edge.style.stroke = "grey";
        });
      console.log(data);
      graph.data(data); // 加载远程数据
      graph.render(); // 渲染

      // 鼠标进入节点
      graph.on("node:mouseenter", (e: { item: any }) => {
        const nodeItem = e.item; // 获取鼠标进入的节点元素对象
        graph.setItemState(nodeItem, "hover", true); // 设置当前节点的 hover 状态为 true
      });

      // 鼠标离开节点
      graph.on("node:mouseleave", (e: { item: any }) => {
        const nodeItem = e.item; // 获取鼠标离开的节点元素对象
        graph.setItemState(nodeItem, "hover", false); // 设置当前节点的 hover 状态为 false
      });

      // 点击节点
      graph.on("node:click", (e: { item: any }) => {
        // 先将所有当前是 click 状态的节点置为非 click 状态
        const clickNodes = graph.findAllByState("node", "click");
        clickNodes.forEach((cn) => {
          graph.setItemState(cn, "click", false);
        });
        const nodeItem = e.item; // 获取被点击的节点元素对象
        graph.setItemState(nodeItem, "click", true); // 设置当前节点的 click 状态为 true
      });

      // 点击边
      graph.on("edge:click", (e: { item: any }) => {
        // 先将所有当前是 click 状态的边置为非 click 状态
        const clickEdges = graph.findAllByState("edge", "click");
        clickEdges.forEach((ce) => {
          graph.setItemState(ce, "click", false);
        });
        const edgeItem = e.item; // 获取被点击的边元素对象
        graph.setItemState(edgeItem, "click", true); // 设置当前边的 click 状态为 true
      });
    };
    main();
  }, []);

  const onDragEnter = (e: React.DragEvent<HTMLDivElement>): any => {
    e.preventDefault();
    e.stopPropagation();
    console.log(e, "onDragEnter");
  };

  const onDragOver = (e: any): any => {
    e.preventDefault();
    e.stopPropagation();
    console.log("onDragOver");
  };

  const onDragLeave = (e: React.DragEvent<HTMLDivElement>): any => {
    e.preventDefault();
    e.stopPropagation();
    console.log(e, "onDragLeave");
  };

  const onDrop = (e: React.DragEvent<HTMLDivElement>): any => {
    e.persist();
    e.preventDefault();
    e.stopPropagation();
    const data = e.dataTransfer.getData("service");
    console.log(data, "onDrop");
  };

  return (
    <div
      ref={containerRef}
      id="container"
      className="Content"
      onDragOver={onDragOver}
      // onDragEnter={onDragEnter}
      onDrop={onDrop}
      // onDragLeave={onDragLeave}
    ></div>
  );
};
export default App;
